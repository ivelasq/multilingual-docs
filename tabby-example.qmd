---
title: "Tabby Extension Example"
format: html
editor: source
filters:
  - tabby
---

Here is an example of [grouped tabset](https://quarto.org/docs/output-formats/html-basics.html#tabset-groups) in [Quarto](https://quarto.org/) created with the [Tabby extension](https://quarto.thecoatlessprofessor.com/tabby/). Select Python to see both tabsets switch. The code is [available on GitHub](https://github.com/ivelasq/multilingual-docs/blob/main/tabby-example.qmd).

::: {.tabby}
```{r}
data("mtcars")
mtcars$fuel_efficiency <- ifelse(mtcars$mpg > 20, "Efficient", "Not Efficient")

plot(
  mtcars$wt, mtcars$mpg,
  main = "MPG vs. Weight",
  xlab = "Weight (1000 lbs)", ylab = "MPG",
  col = ifelse(mtcars$fuel_efficiency == "Efficient", "green", "red"), pch = 19
)

legend("topright", legend = c("Efficient", "Not Efficient"), col = c("green", "red"), pch = 19)
```

```{python}
import pandas as pd
from plotnine import ggplot, aes, geom_point, theme_minimal

mtcars = pd.read_csv("https://raw.githubusercontent.com/mwaskom/seaborn-data/master/mpg.csv").dropna()
mtcars['fuel_efficiency'] = ['Efficient' if mpg > 20 else 'Not Efficient' for mpg in mtcars['mpg']]

plot = (
    ggplot(mtcars, aes(x='weight', y='mpg', color='fuel_efficiency')) +
    geom_point(size=3) +
    theme_minimal()
    )

plot.show()
```
:::


::: {.tabby}
```{r}
library(gt)
towny <- gt::towny

towny_mini <- towny[order(-towny$density_2021), c("name", "website", "density_2021", "land_area_km2", "latitude", "longitude")]
towny_mini <- head(towny_mini, 10)

gt(towny_mini)
```

```{python}
from great_tables import GT, html
from great_tables.data import towny

towny_mini = (
    towny[["name", "website", "density_2021", "land_area_km2", "latitude", "longitude"]]
    .sort_values("density_2021", ascending=False)
    .head(10)
)

(
    GT(towny_mini)
)
```
:::